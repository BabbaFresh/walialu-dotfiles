[user]
  name = Marco Kellershoff
  email = marco@kellershoff.net
  signingkey = E4D325C3FF77285C

[credential]
  helper = gnome-keyring

[commit]
  gpgsign = true

[color]
  status = auto

[color "status"]
  added = green
  changed = blue
  untracked = magenta
  deleted = red

[alias]
  # git backup
  bak = "!git add -A && git commit --amend --reuse-message=HEAD"
  # add all files, commit with latest message, and push force-with-lease
  pwl = "!git add -A && git commit --amend --reuse-message=HEAD --reset-author && git push --force-with-lease"
  # git add
  a = add
  # git add
  aa = add -A
  # git status
  st = status
  # git branch
  b = branch
  # git co
  co = checkout
  # git checkout -b
  cob = checkout -b
  # git reset $file && git checkout $file
  reco = reset HEAD --
  # merge graph
  tree = log --graph --oneline --all
  # merge graph
  treed = tree --pretty=fuller
  # git commit
  ci = commit
  # List commits showing changed files is invoked with git ll and looks like
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  # List with no colors if you need to chain the out put with Unix pipes:
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  # List oneline commits showing dates
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=local --date=format:'%Y-%m-%d %H:%M:%S'
  # List oneline commits showing relative dates
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  # see all the commits related to a file, with the diff of the changes
  filelog = log -u
  fl = log -u
  # Show modified files in last commit:
  dl = "!git ll -1"
  # Show diff
  d = diff
  # Show a cached diff:
  dc = diff --cached
  # Show a diff last commit:
  dlc = diff --cached HEAD^
  # Diff color
  diffc = 'git diff --color | sed -E "s/^([^-+ ]*)[-+ ]/\\1/" | less -r'
  # git lds --show-signature with optional limit ( like `git log -3`)
  # Just do `git sig` for the most recent one or `git log 7` for the 7
  # most recent ones.
  sig = "!f() { if [[ ! -z $1 ]]; then git lds --show-signature -$1; else git lds --show-signature -1; fi; }; f"
  soc = log --show-signature -n 1
  # This is what git blame should look like in the first place
  # bbl stands for better blame
  bbl = log -p -M --follow --stat --show-signature --
  # shorthands for git add -p (patch)
  patch = add -p
  yank = add -p
  yy = add -p
  # shorthands for getting git root
  root = rev-parse --show-toplevel
[push]
  default = simple
  autoSetupRemote = true

[pull]
  default = simple
  rebase = true

[merge]
  conflictstyle = diff3

[core]
  whitespace = -blank-at-eof

[init]
  defaultBranch = main

[includeIf "gitdir:~/projects/work/"]
  path = ~/projects/work/.gitconfig
